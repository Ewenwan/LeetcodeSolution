# Palindrome Number

标签： math

---

## 题目描述
Determine whether an integer is a palindrome. Do this without extra space.

## 思路分析
判断一个整数是否是回文数字。最朴素的方法就可以解决这个问题。
这个问题我开始想到的是字符串的逆序，可以不断比较字符串的首尾字符是否相同并递归（或移动首尾指针来迭代）。但是对于整数来说，显然是不行的。因为整数在内存中直接以补码的形式存储在4个字节中，我们没有办法“获取”它的首尾数字。

所以我想到了先求出这个整数有多少位，假如说是m位，然后就可以通过`n%10`来求得最后一位的数字，用`n/10^m`来获得最高位。但是这样做面临的问题是下一步的n将会是多少？可能会想到直接用`n-n%10-n/10^m*10^m`来获得剩下的那几位。但是实际中由于某几位可能是0，所以，这种方法并不能解决。（可以考虑`10000021`）

所以，查看提示， 可以看到它给出的建议是寻找最"generic"的方法。 所以，把问题简单化，最普通的判断一个串是否是回文串，我们只需要把它逆序之后与原来的串比较不就可以了么？所以，我们可以将这个整数逆序啊~~~

## 代码
```
class Solution {
public:
    bool isPalindrome(int x) {
        if(x < 0)
            return false;
        int n = x;
        int res = 0;      // res 是 x 的逆序
        while(n) {
            res = res*10+n%10;
            n /= 10;
        }
        return x == res;
    }
};
```




